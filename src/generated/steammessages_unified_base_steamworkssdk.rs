// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by protoc --rust-out=...
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `steammessages_unified_base.steamworkssdk.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:dota.EProtoExecutionSite)
pub enum EProtoExecutionSite {
    // @@protoc_insertion_point(enum_value:dota.EProtoExecutionSite.k_EProtoExecutionSiteUnknown)
    k_EProtoExecutionSiteUnknown = 0,
    // @@protoc_insertion_point(enum_value:dota.EProtoExecutionSite.k_EProtoExecutionSiteSteamClient)
    k_EProtoExecutionSiteSteamClient = 3,
}

impl ::protobuf::Enum for EProtoExecutionSite {
    const NAME: &'static str = "EProtoExecutionSite";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EProtoExecutionSite> {
        match value {
            0 => ::std::option::Option::Some(EProtoExecutionSite::k_EProtoExecutionSiteUnknown),
            3 => ::std::option::Option::Some(EProtoExecutionSite::k_EProtoExecutionSiteSteamClient),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<EProtoExecutionSite> {
        match str {
            "k_EProtoExecutionSiteUnknown" => ::std::option::Option::Some(EProtoExecutionSite::k_EProtoExecutionSiteUnknown),
            "k_EProtoExecutionSiteSteamClient" => ::std::option::Option::Some(EProtoExecutionSite::k_EProtoExecutionSiteSteamClient),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [EProtoExecutionSite] = &[
        EProtoExecutionSite::k_EProtoExecutionSiteUnknown,
        EProtoExecutionSite::k_EProtoExecutionSiteSteamClient,
    ];
}

impl ::protobuf::EnumFull for EProtoExecutionSite {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("EProtoExecutionSite").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            EProtoExecutionSite::k_EProtoExecutionSiteUnknown => 0,
            EProtoExecutionSite::k_EProtoExecutionSiteSteamClient => 1,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for EProtoExecutionSite {
    fn default() -> Self {
        EProtoExecutionSite::k_EProtoExecutionSiteUnknown
    }
}

impl EProtoExecutionSite {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<EProtoExecutionSite>("EProtoExecutionSite")
    }
}

/// Extension fields
pub mod exts {

    pub const description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const service_description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::ServiceOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const service_execution_site: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::ServiceOptions, ::protobuf::EnumOrUnknown<super::EProtoExecutionSite>> = ::protobuf::ext::ExtFieldOptional::new(50008, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_ENUM);

    pub const method_description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MethodOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const enum_description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::EnumOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const enum_value_description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::EnumValueOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n.steammessages_unified_base.steamworkssdk.proto\x12\x04dota\x1a\x20goo\
    gle/protobuf/descriptor.proto*]\n\x13EProtoExecutionSite\x12\x20\n\x1ck_\
    EProtoExecutionSiteUnknown\x10\0\x12$\n\x20k_EProtoExecutionSiteSteamCli\
    ent\x10\x03:A\n\x0bdescription\x18\xd0\x86\x03\x20\x01(\t\x12\x1d.google\
    .protobuf.FieldOptionsR\x0bdescription:R\n\x13service_description\x18\
    \xd0\x86\x03\x20\x01(\t\x12\x1f.google.protobuf.ServiceOptionsR\x12servi\
    ceDescription:r\n\x16service_execution_site\x18\xd8\x86\x03\x20\x01(\x0e\
    2\x19.dota.EProtoExecutionSite\x12\x1f.google.protobuf.ServiceOptionsR\
    \x14serviceExecutionSite:O\n\x12method_description\x18\xd0\x86\x03\x20\
    \x01(\t\x12\x1e.google.protobuf.MethodOptionsR\x11methodDescription:I\n\
    \x10enum_description\x18\xd0\x86\x03\x20\x01(\t\x12\x1c.google.protobuf.\
    EnumOptionsR\x0fenumDescription:Y\n\x16enum_value_description\x18\xd0\
    \x86\x03\x20\x01(\t\x12!.google.protobuf.EnumValueOptionsR\x14enumValueD\
    escriptionB*H\x01Z#github.com/dotabuff/manta/dota;dota\x80\x01\0J\xb1\
    \x05\n\x06\x12\x04\0\0\"\x01\n\x08\n\x01\x0c\x12\x03\0\0\x12\n\x08\n\x01\
    \x02\x12\x03\x02\x08\x0c\n\x08\n\x01\x08\x12\x03\x03\0:\n\t\n\x02\x08\
    \x0b\x12\x03\x03\0:\n\t\n\x02\x03\0\x12\x03\x05\x07)\n\x08\n\x01\x08\x12\
    \x03\x07\0\x1c\n\t\n\x02\x08\t\x12\x03\x07\0\x1c\n\x08\n\x01\x08\x12\x03\
    \x08\0#\n\t\n\x02\x08\x10\x12\x03\x08\0#\n\t\n\x01\x07\x12\x04\n\0\x0c\
    \x01\n\t\n\x02\x07\0\x12\x03\x0b\x08,\n\n\n\x03\x07\0\x02\x12\x03\n\x07#\
    \n\n\n\x03\x07\0\x04\x12\x03\x0b\x08\x10\n\n\n\x03\x07\0\x05\x12\x03\x0b\
    \x11\x17\n\n\n\x03\x07\0\x01\x12\x03\x0b\x18#\n\n\n\x03\x07\0\x03\x12\
    \x03\x0b&+\n\t\n\x01\x07\x12\x04\x0e\0\x11\x01\n\t\n\x02\x07\x01\x12\x03\
    \x0f\x084\n\n\n\x03\x07\x01\x02\x12\x03\x0e\x07%\n\n\n\x03\x07\x01\x04\
    \x12\x03\x0f\x08\x10\n\n\n\x03\x07\x01\x05\x12\x03\x0f\x11\x17\n\n\n\x03\
    \x07\x01\x01\x12\x03\x0f\x18+\n\n\n\x03\x07\x01\x03\x12\x03\x0f.3\n\t\n\
    \x02\x07\x02\x12\x03\x10\x08D\n\n\n\x03\x07\x02\x02\x12\x03\x0e\x07%\n\n\
    \n\x03\x07\x02\x04\x12\x03\x10\x08\x10\n\n\n\x03\x07\x02\x06\x12\x03\x10\
    \x11$\n\n\n\x03\x07\x02\x01\x12\x03\x10%;\n\n\n\x03\x07\x02\x03\x12\x03\
    \x10>C\n\t\n\x01\x07\x12\x04\x13\0\x15\x01\n\t\n\x02\x07\x03\x12\x03\x14\
    \x083\n\n\n\x03\x07\x03\x02\x12\x03\x13\x07$\n\n\n\x03\x07\x03\x04\x12\
    \x03\x14\x08\x10\n\n\n\x03\x07\x03\x05\x12\x03\x14\x11\x17\n\n\n\x03\x07\
    \x03\x01\x12\x03\x14\x18*\n\n\n\x03\x07\x03\x03\x12\x03\x14-2\n\t\n\x01\
    \x07\x12\x04\x17\0\x19\x01\n\t\n\x02\x07\x04\x12\x03\x18\x081\n\n\n\x03\
    \x07\x04\x02\x12\x03\x17\x07\"\n\n\n\x03\x07\x04\x04\x12\x03\x18\x08\x10\
    \n\n\n\x03\x07\x04\x05\x12\x03\x18\x11\x17\n\n\n\x03\x07\x04\x01\x12\x03\
    \x18\x18(\n\n\n\x03\x07\x04\x03\x12\x03\x18+0\n\t\n\x01\x07\x12\x04\x1b\
    \0\x1d\x01\n\t\n\x02\x07\x05\x12\x03\x1c\x087\n\n\n\x03\x07\x05\x02\x12\
    \x03\x1b\x07'\n\n\n\x03\x07\x05\x04\x12\x03\x1c\x08\x10\n\n\n\x03\x07\
    \x05\x05\x12\x03\x1c\x11\x17\n\n\n\x03\x07\x05\x01\x12\x03\x1c\x18.\n\n\
    \n\x03\x07\x05\x03\x12\x03\x1c16\n\n\n\x02\x05\0\x12\x04\x1f\0\"\x01\n\n\
    \n\x03\x05\0\x01\x12\x03\x1f\x05\x18\n\x0b\n\x04\x05\0\x02\0\x12\x03\x20\
    \x08)\n\x0c\n\x05\x05\0\x02\0\x01\x12\x03\x20\x08$\n\x0c\n\x05\x05\0\x02\
    \0\x02\x12\x03\x20'(\n\x0b\n\x04\x05\0\x02\x01\x12\x03!\x08-\n\x0c\n\x05\
    \x05\0\x02\x01\x01\x12\x03!\x08(\n\x0c\n\x05\x05\0\x02\x01\x02\x12\x03!+\
    ,\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(1);
            deps.push(::protobuf::descriptor::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(EProtoExecutionSite::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
