// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by protoc --rust-out=...
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `dota_hud_types.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:dota.EHeroSelectionText)
pub enum EHeroSelectionText {
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_Invalid)
    k_EHeroSelectionText_Invalid = -1,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_None)
    k_EHeroSelectionText_None = 0,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_ChooseHero)
    k_EHeroSelectionText_ChooseHero = 1,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_Planning_YouFirst)
    k_EHeroSelectionText_AllDraft_Planning_YouFirst = 2,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_Planning_TheyFirst)
    k_EHeroSelectionText_AllDraft_Planning_TheyFirst = 3,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_Banning)
    k_EHeroSelectionText_AllDraft_Banning = 4,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_Ban_Waiting)
    k_EHeroSelectionText_AllDraft_Ban_Waiting = 5,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_PickTwo)
    k_EHeroSelectionText_AllDraft_PickTwo = 6,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_PickOneMore)
    k_EHeroSelectionText_AllDraft_PickOneMore = 7,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_PickOne)
    k_EHeroSelectionText_AllDraft_PickOne = 8,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_WaitingRadiant)
    k_EHeroSelectionText_AllDraft_WaitingRadiant = 9,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_WaitingDire)
    k_EHeroSelectionText_AllDraft_WaitingDire = 10,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_TeammateRandomed)
    k_EHeroSelectionText_AllDraft_TeammateRandomed = 11,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_YouPicking_LosingGold)
    k_EHeroSelectionText_AllDraft_YouPicking_LosingGold = 12,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold)
    k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold = 13,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_CaptainsMode_ChooseCaptain)
    k_EHeroSelectionText_CaptainsMode_ChooseCaptain = 14,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_CaptainsMode_WaitingForChooseCaptain)
    k_EHeroSelectionText_CaptainsMode_WaitingForChooseCaptain = 15,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_CaptainsMode_YouSelect)
    k_EHeroSelectionText_CaptainsMode_YouSelect = 16,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_CaptainsMode_TheySelect)
    k_EHeroSelectionText_CaptainsMode_TheySelect = 17,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_CaptainsMode_YouBan)
    k_EHeroSelectionText_CaptainsMode_YouBan = 18,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_CaptainsMode_TheyBan)
    k_EHeroSelectionText_CaptainsMode_TheyBan = 19,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_RandomDraft_HeroReview)
    k_EHeroSelectionText_RandomDraft_HeroReview = 20,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_RandomDraft_RoundDisplay)
    k_EHeroSelectionText_RandomDraft_RoundDisplay = 21,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_RandomDraft_Waiting)
    k_EHeroSelectionText_RandomDraft_Waiting = 22,
    // @@protoc_insertion_point(enum_value:dota.EHeroSelectionText.k_EHeroSelectionText_EventGame_BanPhase)
    k_EHeroSelectionText_EventGame_BanPhase = 23,
}

impl ::protobuf::Enum for EHeroSelectionText {
    const NAME: &'static str = "EHeroSelectionText";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EHeroSelectionText> {
        match value {
            -1 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_Invalid),
            0 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_None),
            1 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_ChooseHero),
            2 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_Planning_YouFirst),
            3 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_Planning_TheyFirst),
            4 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_Banning),
            5 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_Ban_Waiting),
            6 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickTwo),
            7 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickOneMore),
            8 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickOne),
            9 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_WaitingRadiant),
            10 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_WaitingDire),
            11 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_TeammateRandomed),
            12 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_YouPicking_LosingGold),
            13 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold),
            14 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_ChooseCaptain),
            15 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_WaitingForChooseCaptain),
            16 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_YouSelect),
            17 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_TheySelect),
            18 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_YouBan),
            19 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_TheyBan),
            20 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_RandomDraft_HeroReview),
            21 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_RandomDraft_RoundDisplay),
            22 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_RandomDraft_Waiting),
            23 => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_EventGame_BanPhase),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<EHeroSelectionText> {
        match str {
            "k_EHeroSelectionText_Invalid" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_Invalid),
            "k_EHeroSelectionText_None" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_None),
            "k_EHeroSelectionText_ChooseHero" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_ChooseHero),
            "k_EHeroSelectionText_AllDraft_Planning_YouFirst" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_Planning_YouFirst),
            "k_EHeroSelectionText_AllDraft_Planning_TheyFirst" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_Planning_TheyFirst),
            "k_EHeroSelectionText_AllDraft_Banning" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_Banning),
            "k_EHeroSelectionText_AllDraft_Ban_Waiting" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_Ban_Waiting),
            "k_EHeroSelectionText_AllDraft_PickTwo" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickTwo),
            "k_EHeroSelectionText_AllDraft_PickOneMore" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickOneMore),
            "k_EHeroSelectionText_AllDraft_PickOne" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickOne),
            "k_EHeroSelectionText_AllDraft_WaitingRadiant" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_WaitingRadiant),
            "k_EHeroSelectionText_AllDraft_WaitingDire" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_WaitingDire),
            "k_EHeroSelectionText_AllDraft_TeammateRandomed" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_TeammateRandomed),
            "k_EHeroSelectionText_AllDraft_YouPicking_LosingGold" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_YouPicking_LosingGold),
            "k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold),
            "k_EHeroSelectionText_CaptainsMode_ChooseCaptain" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_ChooseCaptain),
            "k_EHeroSelectionText_CaptainsMode_WaitingForChooseCaptain" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_WaitingForChooseCaptain),
            "k_EHeroSelectionText_CaptainsMode_YouSelect" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_YouSelect),
            "k_EHeroSelectionText_CaptainsMode_TheySelect" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_TheySelect),
            "k_EHeroSelectionText_CaptainsMode_YouBan" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_YouBan),
            "k_EHeroSelectionText_CaptainsMode_TheyBan" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_TheyBan),
            "k_EHeroSelectionText_RandomDraft_HeroReview" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_RandomDraft_HeroReview),
            "k_EHeroSelectionText_RandomDraft_RoundDisplay" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_RandomDraft_RoundDisplay),
            "k_EHeroSelectionText_RandomDraft_Waiting" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_RandomDraft_Waiting),
            "k_EHeroSelectionText_EventGame_BanPhase" => ::std::option::Option::Some(EHeroSelectionText::k_EHeroSelectionText_EventGame_BanPhase),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [EHeroSelectionText] = &[
        EHeroSelectionText::k_EHeroSelectionText_Invalid,
        EHeroSelectionText::k_EHeroSelectionText_None,
        EHeroSelectionText::k_EHeroSelectionText_ChooseHero,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_Planning_YouFirst,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_Planning_TheyFirst,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_Banning,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_Ban_Waiting,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickTwo,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickOneMore,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickOne,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_WaitingRadiant,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_WaitingDire,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_TeammateRandomed,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_YouPicking_LosingGold,
        EHeroSelectionText::k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold,
        EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_ChooseCaptain,
        EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_WaitingForChooseCaptain,
        EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_YouSelect,
        EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_TheySelect,
        EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_YouBan,
        EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_TheyBan,
        EHeroSelectionText::k_EHeroSelectionText_RandomDraft_HeroReview,
        EHeroSelectionText::k_EHeroSelectionText_RandomDraft_RoundDisplay,
        EHeroSelectionText::k_EHeroSelectionText_RandomDraft_Waiting,
        EHeroSelectionText::k_EHeroSelectionText_EventGame_BanPhase,
    ];
}

impl ::protobuf::EnumFull for EHeroSelectionText {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("EHeroSelectionText").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            EHeroSelectionText::k_EHeroSelectionText_Invalid => 0,
            EHeroSelectionText::k_EHeroSelectionText_None => 1,
            EHeroSelectionText::k_EHeroSelectionText_ChooseHero => 2,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_Planning_YouFirst => 3,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_Planning_TheyFirst => 4,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_Banning => 5,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_Ban_Waiting => 6,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickTwo => 7,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickOneMore => 8,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_PickOne => 9,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_WaitingRadiant => 10,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_WaitingDire => 11,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_TeammateRandomed => 12,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_YouPicking_LosingGold => 13,
            EHeroSelectionText::k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold => 14,
            EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_ChooseCaptain => 15,
            EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_WaitingForChooseCaptain => 16,
            EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_YouSelect => 17,
            EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_TheySelect => 18,
            EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_YouBan => 19,
            EHeroSelectionText::k_EHeroSelectionText_CaptainsMode_TheyBan => 20,
            EHeroSelectionText::k_EHeroSelectionText_RandomDraft_HeroReview => 21,
            EHeroSelectionText::k_EHeroSelectionText_RandomDraft_RoundDisplay => 22,
            EHeroSelectionText::k_EHeroSelectionText_RandomDraft_Waiting => 23,
            EHeroSelectionText::k_EHeroSelectionText_EventGame_BanPhase => 24,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

// Note, `Default` is implemented although default value is not 0
impl ::std::default::Default for EHeroSelectionText {
    fn default() -> Self {
        EHeroSelectionText::k_EHeroSelectionText_Invalid
    }
}

impl EHeroSelectionText {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<EHeroSelectionText>("EHeroSelectionText")
    }
}

/// Extension fields
pub mod exts {

    pub const hud_localize_token: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::EnumValueOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50501, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x14dota_hud_types.proto\x12\x04dota\x1a\x20google/protobuf/descriptor\
    .proto*\xc8\t\n\x12EHeroSelectionText\x12)\n\x1ck_EHeroSelectionText_Inv\
    alid\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x1d\n\x19k_EHeroSel\
    ectionText_None\x10\0\x12#\n\x1fk_EHeroSelectionText_ChooseHero\x10\x01\
    \x123\n/k_EHeroSelectionText_AllDraft_Planning_YouFirst\x10\x02\x124\n0k\
    _EHeroSelectionText_AllDraft_Planning_TheyFirst\x10\x03\x12)\n%k_EHeroSe\
    lectionText_AllDraft_Banning\x10\x04\x12-\n)k_EHeroSelectionText_AllDraf\
    t_Ban_Waiting\x10\x05\x12)\n%k_EHeroSelectionText_AllDraft_PickTwo\x10\
    \x06\x12-\n)k_EHeroSelectionText_AllDraft_PickOneMore\x10\x07\x12)\n%k_E\
    HeroSelectionText_AllDraft_PickOne\x10\x08\x120\n,k_EHeroSelectionText_A\
    llDraft_WaitingRadiant\x10\t\x12-\n)k_EHeroSelectionText_AllDraft_Waitin\
    gDire\x10\n\x122\n.k_EHeroSelectionText_AllDraft_TeammateRandomed\x10\
    \x0b\x127\n3k_EHeroSelectionText_AllDraft_YouPicking_LosingGold\x10\x0c\
    \x128\n4k_EHeroSelectionText_AllDraft_TheyPicking_LosingGold\x10\r\x123\
    \n/k_EHeroSelectionText_CaptainsMode_ChooseCaptain\x10\x0e\x12=\n9k_EHer\
    oSelectionText_CaptainsMode_WaitingForChooseCaptain\x10\x0f\x12/\n+k_EHe\
    roSelectionText_CaptainsMode_YouSelect\x10\x10\x120\n,k_EHeroSelectionTe\
    xt_CaptainsMode_TheySelect\x10\x11\x12,\n(k_EHeroSelectionText_CaptainsM\
    ode_YouBan\x10\x12\x12-\n)k_EHeroSelectionText_CaptainsMode_TheyBan\x10\
    \x13\x12/\n+k_EHeroSelectionText_RandomDraft_HeroReview\x10\x14\x121\n-k\
    _EHeroSelectionText_RandomDraft_RoundDisplay\x10\x15\x12,\n(k_EHeroSelec\
    tionText_RandomDraft_Waiting\x10\x16\x12+\n'k_EHeroSelectionText_EventGa\
    me_BanPhase\x10\x17:Q\n\x12hud_localize_token\x18\xc5\x8a\x03\x20\x01(\t\
    \x12!.google.protobuf.EnumValueOptionsR\x10hudLocalizeTokenB%Z#github.co\
    m/dotabuff/manta/dota;dotaJ\xa7\t\n\x06\x12\x04\0\0%\x01\n\x08\n\x01\x0c\
    \x12\x03\0\0\x12\n\x08\n\x01\x02\x12\x03\x02\x08\x0c\n\x08\n\x01\x08\x12\
    \x03\x03\0:\n\t\n\x02\x08\x0b\x12\x03\x03\0:\n\t\n\x02\x03\0\x12\x03\x05\
    \x07)\n\t\n\x01\x07\x12\x04\x07\0\t\x01\n\t\n\x02\x07\0\x12\x03\x08\x083\
    \n\n\n\x03\x07\0\x02\x12\x03\x07\x07'\n\n\n\x03\x07\0\x04\x12\x03\x08\
    \x08\x10\n\n\n\x03\x07\0\x05\x12\x03\x08\x11\x17\n\n\n\x03\x07\0\x01\x12\
    \x03\x08\x18*\n\n\n\x03\x07\0\x03\x12\x03\x08-2\n\n\n\x02\x05\0\x12\x04\
    \x0b\0%\x01\n\n\n\x03\x05\0\x01\x12\x03\x0b\x05\x17\n\x0b\n\x04\x05\0\
    \x02\0\x12\x03\x0c\x08*\n\x0c\n\x05\x05\0\x02\0\x01\x12\x03\x0c\x08$\n\
    \x0c\n\x05\x05\0\x02\0\x02\x12\x03\x0c')\n\x0b\n\x04\x05\0\x02\x01\x12\
    \x03\r\x08&\n\x0c\n\x05\x05\0\x02\x01\x01\x12\x03\r\x08!\n\x0c\n\x05\x05\
    \0\x02\x01\x02\x12\x03\r$%\n\x0b\n\x04\x05\0\x02\x02\x12\x03\x0e\x08,\n\
    \x0c\n\x05\x05\0\x02\x02\x01\x12\x03\x0e\x08'\n\x0c\n\x05\x05\0\x02\x02\
    \x02\x12\x03\x0e*+\n\x0b\n\x04\x05\0\x02\x03\x12\x03\x0f\x08<\n\x0c\n\
    \x05\x05\0\x02\x03\x01\x12\x03\x0f\x087\n\x0c\n\x05\x05\0\x02\x03\x02\
    \x12\x03\x0f:;\n\x0b\n\x04\x05\0\x02\x04\x12\x03\x10\x08=\n\x0c\n\x05\
    \x05\0\x02\x04\x01\x12\x03\x10\x088\n\x0c\n\x05\x05\0\x02\x04\x02\x12\
    \x03\x10;<\n\x0b\n\x04\x05\0\x02\x05\x12\x03\x11\x082\n\x0c\n\x05\x05\0\
    \x02\x05\x01\x12\x03\x11\x08-\n\x0c\n\x05\x05\0\x02\x05\x02\x12\x03\x110\
    1\n\x0b\n\x04\x05\0\x02\x06\x12\x03\x12\x086\n\x0c\n\x05\x05\0\x02\x06\
    \x01\x12\x03\x12\x081\n\x0c\n\x05\x05\0\x02\x06\x02\x12\x03\x1245\n\x0b\
    \n\x04\x05\0\x02\x07\x12\x03\x13\x082\n\x0c\n\x05\x05\0\x02\x07\x01\x12\
    \x03\x13\x08-\n\x0c\n\x05\x05\0\x02\x07\x02\x12\x03\x1301\n\x0b\n\x04\
    \x05\0\x02\x08\x12\x03\x14\x086\n\x0c\n\x05\x05\0\x02\x08\x01\x12\x03\
    \x14\x081\n\x0c\n\x05\x05\0\x02\x08\x02\x12\x03\x1445\n\x0b\n\x04\x05\0\
    \x02\t\x12\x03\x15\x082\n\x0c\n\x05\x05\0\x02\t\x01\x12\x03\x15\x08-\n\
    \x0c\n\x05\x05\0\x02\t\x02\x12\x03\x1501\n\x0b\n\x04\x05\0\x02\n\x12\x03\
    \x16\x089\n\x0c\n\x05\x05\0\x02\n\x01\x12\x03\x16\x084\n\x0c\n\x05\x05\0\
    \x02\n\x02\x12\x03\x1678\n\x0b\n\x04\x05\0\x02\x0b\x12\x03\x17\x087\n\
    \x0c\n\x05\x05\0\x02\x0b\x01\x12\x03\x17\x081\n\x0c\n\x05\x05\0\x02\x0b\
    \x02\x12\x03\x1746\n\x0b\n\x04\x05\0\x02\x0c\x12\x03\x18\x08<\n\x0c\n\
    \x05\x05\0\x02\x0c\x01\x12\x03\x18\x086\n\x0c\n\x05\x05\0\x02\x0c\x02\
    \x12\x03\x189;\n\x0b\n\x04\x05\0\x02\r\x12\x03\x19\x08A\n\x0c\n\x05\x05\
    \0\x02\r\x01\x12\x03\x19\x08;\n\x0c\n\x05\x05\0\x02\r\x02\x12\x03\x19>@\
    \n\x0b\n\x04\x05\0\x02\x0e\x12\x03\x1a\x08B\n\x0c\n\x05\x05\0\x02\x0e\
    \x01\x12\x03\x1a\x08<\n\x0c\n\x05\x05\0\x02\x0e\x02\x12\x03\x1a?A\n\x0b\
    \n\x04\x05\0\x02\x0f\x12\x03\x1b\x08=\n\x0c\n\x05\x05\0\x02\x0f\x01\x12\
    \x03\x1b\x087\n\x0c\n\x05\x05\0\x02\x0f\x02\x12\x03\x1b:<\n\x0b\n\x04\
    \x05\0\x02\x10\x12\x03\x1c\x08G\n\x0c\n\x05\x05\0\x02\x10\x01\x12\x03\
    \x1c\x08A\n\x0c\n\x05\x05\0\x02\x10\x02\x12\x03\x1cDF\n\x0b\n\x04\x05\0\
    \x02\x11\x12\x03\x1d\x089\n\x0c\n\x05\x05\0\x02\x11\x01\x12\x03\x1d\x083\
    \n\x0c\n\x05\x05\0\x02\x11\x02\x12\x03\x1d68\n\x0b\n\x04\x05\0\x02\x12\
    \x12\x03\x1e\x08:\n\x0c\n\x05\x05\0\x02\x12\x01\x12\x03\x1e\x084\n\x0c\n\
    \x05\x05\0\x02\x12\x02\x12\x03\x1e79\n\x0b\n\x04\x05\0\x02\x13\x12\x03\
    \x1f\x086\n\x0c\n\x05\x05\0\x02\x13\x01\x12\x03\x1f\x080\n\x0c\n\x05\x05\
    \0\x02\x13\x02\x12\x03\x1f35\n\x0b\n\x04\x05\0\x02\x14\x12\x03\x20\x087\
    \n\x0c\n\x05\x05\0\x02\x14\x01\x12\x03\x20\x081\n\x0c\n\x05\x05\0\x02\
    \x14\x02\x12\x03\x2046\n\x0b\n\x04\x05\0\x02\x15\x12\x03!\x089\n\x0c\n\
    \x05\x05\0\x02\x15\x01\x12\x03!\x083\n\x0c\n\x05\x05\0\x02\x15\x02\x12\
    \x03!68\n\x0b\n\x04\x05\0\x02\x16\x12\x03\"\x08;\n\x0c\n\x05\x05\0\x02\
    \x16\x01\x12\x03\"\x085\n\x0c\n\x05\x05\0\x02\x16\x02\x12\x03\"8:\n\x0b\
    \n\x04\x05\0\x02\x17\x12\x03#\x086\n\x0c\n\x05\x05\0\x02\x17\x01\x12\x03\
    #\x080\n\x0c\n\x05\x05\0\x02\x17\x02\x12\x03#35\n\x0b\n\x04\x05\0\x02\
    \x18\x12\x03$\x085\n\x0c\n\x05\x05\0\x02\x18\x01\x12\x03$\x08/\n\x0c\n\
    \x05\x05\0\x02\x18\x02\x12\x03$24\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(1);
            deps.push(::protobuf::descriptor::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(EHeroSelectionText::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
